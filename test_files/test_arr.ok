extern fun print_i32(i32): i16; 
extern fun println(): i16;

struct test1 {
    &i32 num,
}

struct test2 {
    [i32;3] inner,
}

struct test3 {
    [test1; 1] arr, 
}

fun dummy(): i32 {
    ret 42;
}

fun main(): i16 {
    i32 n = 31; 
    i32 a = 32;

    [test1;1] struct_array = [test1 { num = &n }];
 
    print_i32(*struct_array[0].num); # 31
    println();

    i32 d = dummy();

    [&i32;3] ref_arr = [&n, &a, &d];
    print_i32(*ref_arr[2]);
    println();

    [i32; 3] arr_const   = [0, 1, 0];
    [i32; 3] arr_noconst = [0, 1, dummy()];

    [test1;2] struct_array_2 = [
        test1 { num = &n },
        test1 { num = &a }
    ];

    print_i32(*struct_array_2[1].num); # 32
    println();

    test2 example = test2 {
        inner = [1, 2, 3],
    };

    i32 a1 = example.inner[2];

# i32 a1 = example.inner[2].a[1][2].ba.kaixo[1];

    print_i32(a1); # 3
    println();


    test3 my_test3 = test3 {
        arr = struct_array, 
    };

    print_i32(*my_test3.arr[0].num); # 31
    println();

    ret 0;
}
